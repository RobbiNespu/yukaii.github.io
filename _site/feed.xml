<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Daily Oops!</title>
    <description>Yukai&#39;s blog. Life, music, web, and all the fun.
</description>
    <link>http://yukaii.tw/</link>
    <atom:link href="http://yukaii.tw/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 09 Jun 2016 23:55:45 +0800</pubDate>
    <lastBuildDate>Thu, 09 Jun 2016 23:55:45 +0800</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>在 GitHub 上設定 Jekyll 和自訂網域</title>
        <description>&lt;p&gt;花了時間把 Jekyll 建起來。Ghost 是很棒沒錯，不過想要完全掌控還要多花許多時間，純粹靜態網頁更為靈活，再配上 &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll-assets&lt;/code&gt;，如果真的需要點 ES6 還是可以硬上的。&lt;/p&gt;

&lt;h2 id=&quot;git-subtree&quot;&gt;Git Subtree&lt;/h2&gt;

&lt;p&gt;我把原始的 branch 命名為 &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll&lt;/code&gt;，用 subtree 把 Jekyll 產生的 &lt;code class=&quot;highlighter-rouge&quot;&gt;_site&lt;/code&gt; 資料夾切開：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git checkout -b jekyll &lt;span class=&quot;c&quot;&gt;# 原本在 master&lt;/span&gt;
git branch -D master &lt;span class=&quot;c&quot;&gt;# 把原本 master branch 刪掉&lt;/span&gt;
git subtree split --prefix&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;_site -b master &lt;span class=&quot;c&quot;&gt;# subtree 切割&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;到這算切割完畢，接下來每次更新時，都從原本 &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll&lt;/code&gt; branch commit，然後 push subtree 的 branch：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git commit -m &lt;span class=&quot;s2&quot;&gt;&quot;commit on jekyll branch&quot;&lt;/span&gt;
git subtree push --prefix _site origin master &lt;span class=&quot;c&quot;&gt;# 將 _site 的 subtree 推到 origin 的 master branch&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;github-user-page-custom-domain&quot;&gt;GitHub user page custom domain&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;二圖流&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/blog/cloudflare1.png&quot; width=&quot;967&quot; height=&quot;117&quot; alt=&quot;blog/cloudflare1.png&quot; /&gt;
&lt;img src=&quot;/assets/blog/cloudflare2.png&quot; width=&quot;959&quot; height=&quot;59&quot; alt=&quot;blog/cloudflare2.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CNAME&lt;/code&gt; 檔：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;www.yukaii.tw
yukaii.tw
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section&quot;&gt;其它自訂&lt;/h2&gt;

&lt;p&gt;Jekyll 也有 partial 挺方便的，我用來做 image caption，比如以下這段：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-txt&quot;&gt;
{% include image.html url=&quot;http://i.imgur.com/gqOPCwP.jpg&quot; description=&quot;六月不要啊啊啊，應該沒有第二行啦&quot; %}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;就會產生：&lt;/p&gt;

&lt;table class=&quot;image&quot; style=&quot;margin-bottom: 15px&quot;&gt;
&lt;caption align=&quot;bottom&quot;&gt;六月不要啊啊啊，應該沒有第二行啦&lt;/caption&gt;
&lt;tr&gt;&lt;td&gt;&lt;img src=&quot;http://i.imgur.com/gqOPCwP.jpg&quot; alt=&quot;六月不要啊啊啊，應該沒有第二行啦&quot; width=&quot;&quot; height=&quot;&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;需要在 &lt;code class=&quot;highlighter-rouge&quot;&gt;_includes&lt;/code&gt; 資料夾新增 &lt;code class=&quot;highlighter-rouge&quot;&gt;image.html&lt;/code&gt;，詳情可&lt;a href=&quot;http://stackoverflow.com/questions/19331362/using-an-image-caption-in-markdown-jekyll&quot;&gt;參考這裡&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 09 Jun 2016 00:30:54 +0800</pubDate>
        <link>http://yukaii.tw/blog/2016/06/09/setup-jekyll-on-github-page/</link>
        <guid isPermaLink="true">http://yukaii.tw/blog/2016/06/09/setup-jekyll-on-github-page/</guid>
        
        
        <category>jekyll</category>
        
        <category>setup</category>
        
        <category>github</category>
        
        <category>git</category>
        
        <category>subtree</category>
        
      </item>
    
      <item>
        <title>第十六篇 - ELK 安裝筆記</title>
        <description>&lt;p&gt;雖然說是筆記啦，實際上就是把&lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-install-elasticsearch-logstash-and-kibana-elk-stack-on-ubuntu-14-04&quot;&gt;數位海的文章&lt;/a&gt;照著打一打就做完了（暈）這其實是一門課的作業，附上 &lt;a href=&quot;https://github.com/Yukaii/CS5124701&quot;&gt;Github&lt;/a&gt; 上的簡單說明：&lt;/p&gt;

&lt;blockquote&gt;
此份 Repo 是 118 104 第二學年度，CS5124701 巨量資料與分析的課堂作業一。作業一的要求就是寫一隻應用到 Twitter 或是 Github 的爬蟲，並把爬下的資料格式化成 json。在 3/29 的這週，教了 ELK Stack 設定方法，所以 Crawler 程式並沒有多做特別設定，直接套用課堂簡報上的 Logstash Twitter 樣板。

&lt;br /&gt;&lt;br /&gt;

以下記錄一下 ELK 安裝筆記，與課堂上略有不同的部分。說明一下，因為主力機 MBA 的儲存空間快炸了，所以我在 AWS 上開了一台 t2.medium 的機器當做跑 Spark 以及 ELK Stack 的平臺。在上週的課程簡報中 ELK 幾乎都是以下載 binary zip 包的方式設定，因為習慣用 apt 之流等套件管理程式，裝 ELK 相關設定檔也跟 binary zip 不太一樣。
&lt;/blockquote&gt;

&lt;p&gt;就是我龜毛所以要特別租一台機器操作。說到這，最近 Google Cloud Platform(GCP) 一註冊就送三百鎂的額度可以用，很讚，早知道就直接裝在上面了，幹嘛買啥 EC2 XDDD。詳情就請移駕到小弟 &lt;a href=&quot;https://github.com/Yukaii/CS5124701&quot;&gt;Github&lt;/a&gt;。&lt;/p&gt;

</description>
        <pubDate>Thu, 07 Apr 2016 13:43:00 +0800</pubDate>
        <link>http://yukaii.tw/blog/2016/04/07/16th-elk-installation-notes/</link>
        <guid isPermaLink="true">http://yukaii.tw/blog/2016/04/07/16th-elk-installation-notes/</guid>
        
        
        <category>Elasticsearch</category>
        
        <category>Logstash</category>
        
        <category>Kibana</category>
        
        <category>安裝魂</category>
        
        <category>就只是篇筆記</category>
        
      </item>
    
      <item>
        <title>第十五篇 - 使用 AWS CodeDeploy 跑起你的 WordPress - 官方教學筆記</title>
        <description>&lt;p&gt;為何要部屬 WordPress？就因為他是 &lt;a href=&quot;http://docs.aws.amazon.com/codedeploy/latest/userguide/welcome.html&quot;&gt;CodeDeploy&lt;/a&gt; Tutorial 的第一個範例。AWS Documention 有個特點，就是到處 Reference 來 Reference 去，你很難在單一流程完整跑完所有的任務，非得要搭著其它份文件一起對照。筆者英文也沒那麼好，看著看著就會漏東漏西，文件又滿滿的都是字，沒有圖片可以參考，真令人崩潰。&lt;/p&gt;

&lt;p&gt;CodeDeploy 是 AWS 眾多部屬方案中，看起來比較單純的一種。寫好 Setup 程式的 Shell Script，再聲明好 &lt;code class=&quot;highlighter-rouge&quot;&gt;appspec.yml&lt;/code&gt;，定義每個 deploy life cycle 不同的階段要跑的動作，用 AWS CLI Tool 把 repo 打包上傳到 S3，再到 CodeDeploy console 定義應用程式部屬規則、後臺發起一個 deployment（一個部屬行動），CodeDeploy Service 便會把你的 code 部屬到你設定的 Deployment Group，依照 Group 設定的機器不同，你可以在同一個機器部屬很多個 Application，或是同一個 Application 部屬到很多台機器，端看設定，啦。&lt;/p&gt;

&lt;p&gt;當然，AWS 系列就是啥都可以用 CLI 跑，只要開好對應權限的 role 並拿到 Access ID 和 Secret Key，我們也可以交由第三方 CI 服務，比如說 CodeShip，來幫我們完成「打包程式碼並上傳 S3」、「發起部屬行動」這種的工作。&lt;/p&gt;

&lt;p&gt;以下便大致記錄一下本日折騰的感想與流程。&lt;/p&gt;

&lt;!--more--&gt;
&lt;p&gt;## 概念&lt;/p&gt;

&lt;p&gt;CodeDeploy 約略是 14 年 11 月推出的服務，在此幹一張官圖，看圖說故事。
&lt;img src=&quot;http://docs.aws.amazon.com/codedeploy/latest/userguide/images/sds_architecture.png&quot; alt=&quot;CD&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;在你的開發機器上寫好 code 、設定好 appspec.yml，上傳到 github 或是打包傳到 s3&lt;/li&gt;
  &lt;li&gt;在 CodeDeploy 設定好部屬邏輯&lt;/li&gt;
  &lt;li&gt;每一台 instance 的 agent 把 codebase 從 s3 或 github 拉下來&lt;/li&gt;
  &lt;li&gt;跑部屬 script！裝裝裝&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;大概醬，英文版可以看&lt;a href=&quot;http://docs.aws.amazon.com/codedeploy/latest/userguide/welcome.html&quot;&gt;這&lt;/a&gt;，另外強烈建議 aws 系列最好都先從 &lt;a href=&quot;http://docs.aws.amazon.com/codedeploy/latest/userguide/concepts.html&quot;&gt;Concept&lt;/a&gt; 開始看，要不然鐵定被無限連結地獄搞死，崩潰。&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;名詞解說&lt;/h2&gt;

&lt;p&gt;可以開好&lt;a href=&quot;http://docs.aws.amazon.com/codedeploy/latest/userguide/getting-started-set-up-instance.html&quot;&gt;官方教學&lt;/a&gt;的分頁，淨身準備一下，接下來講解教學中會出現的名詞。其實名詞解釋放在教學開頭實在是挺不好的，我自己跑教學也是跟著實作之後才有點感覺，在還沒進行操作前做的說明都是廢話。話雖然是這樣說啦，可是這是筆記又不是演講，你翻到下面還是可以翻回來看啊，所以我還是寫在這了。呵呵。滿多中文名詞都我隨便翻的 XD，中文文件越少，我就掌握著更多的話語權（才怪），大家趕快來寫文件吧哈哈。&lt;/p&gt;

&lt;p&gt;AWS 在各種服務開 API 開很大開不用錢的狀況下，權限的管理便十分重要，阿罵爽雲端福利社使用 IAM 角色權限管理服務，來區分出不同服務或使用者，對於 AWS 服務使用的權限隔離。舉例來說，CodeDeploy 在 AWS 裡算是一個服務(Service)，雖然通通都是在 AWS 裡啦，但是你還是要給他一些對 AWS 資源的存取權限才可以，比如說當我們對好幾臺 EC2 Instances 設定了標籤（Tag），我們也要給 CodeDeploy 讀取 EC2 Intance 標籤的權限，CodeDeploy 才知道要部屬到哪幾台機器上啊，這就是權限管理的作用。&lt;/p&gt;

&lt;p&gt;不同的權限，在 IAM 裡就叫做 Policy（方針）。當人有了多項 Policy 之後，能力越大，責任越重，你所要承擔的就是職責了（屁話），在 IAM 裡我們把他稱作角色職責 (Role）。在 AWS 裡面有不同的服務，Role 的類型也都不同，比如 EC2 Instance 的 Role 就叫 Instance Profile，用來管理 EC2 能有那些權限，在 CodeDeploy 官方教學裡，EC2 的職責是把用 agent 把 codebase 從 s3 拉下來，所以在啟動 Instance 之前，我們必須先設定好能夠存取 S3 的 Instance Profile，並在啟動(Launch) Instance 把 Role 指派給他。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/0ulM7UH.png&quot; alt=&quot;&quot; /&gt;
不同的 Role Type。CodeDeploy 教學中用到的分別是 CodeDeploy 和 EC2 的 Role Type。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/on614NX.png&quot; alt=&quot;&quot; /&gt;
CodeDeploy 的 Service Role，直接掛上 AWS 建立好的 Policy，可以直接看出使用了那些權限。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;跑教學…咦&lt;/h2&gt;

&lt;p&gt;我前面嫌的要死，就因為這次跑教學真的打死也找不到安裝 CodeDeploy agent 的步驟，反反覆覆翻了教學幾次，卻一直找不到哪裡出錯。以下來回顧一下。&lt;/p&gt;

&lt;p&gt;首先，&lt;a href=&quot;http://docs.aws.amazon.com/codedeploy/latest/userguide/getting-started-set-up-instance.html&quot;&gt;照著教學&lt;/a&gt;的說明先在 EC2 Launch 一個 Instance。他第一步教學的作用其實就是給你一個預先裝好 aws cli tools 的環境，好使用 cli 界面打包上傳 code 到 s3，用你自己的電腦其實就可以了。設定好 Keypair，透過 pem 檔 ssh 進機器後，先來&lt;a href=&quot;http://docs.aws.amazon.com/codedeploy/latest/userguide/how-to-run-agent.html&quot;&gt;安裝 codedeploy agent 到機器上&lt;/a&gt;。裝到一半你會發現連 agent 的 aws s3 bucket 都抓不下來，原來是我們還沒設定 EC2 的 &lt;a href=&quot;http://docs.aws.amazon.com/codedeploy/latest/userguide/how-to-configure-existing-instance.html&quot;&gt;Instance Profile&lt;/a&gt;，也就是 EC2 類型的 Role。請去 IAM 設定，並如同連結裡面加上 S3 的存取權限。這權限一定要開，即使現在用 wget 直接拉 bucket 的 agent install script 下來裝完，之後要從 s3 部屬時沒開也沒法抓啊。&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;Version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2012-10-17&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;Statement&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;Action&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;s3:Get*&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;s3:List*&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;em&gt;範例 S3 的 widecard 權限，當然還是詳細指定比較好。先新增 Policy，在建立 EC2 Type 的 Role Attach 上去，或是建立 Role 時寫成 Inline Policy。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;是的。就是這兩點搞死我。&lt;strong&gt;第一，EC2 Role 要先設定 S3 存取權，並在 Instance 建立時掛載。第二，CodeDeploy Agent 要先裝上 Instance&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;教學是都搜尋的到啦，可是排成一個完整版不好嗎，都已經拆 Step by Step 了，還 Lost 一堆，崩潰啦，難怪各種 AWS 代管服務蓬勃發展啊無誤 XDDD&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;再跑一次&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;首先在 IAM 建立兩個 Role ，一個是給 EC2 的，一個是給 CodeDeploy 的。EC2 Role 直接用上面提到的 S3 Bucket 權限寫進去，EC2 的 Role 又稱 Instance Profile，呵。CodeDeploy 的 Role 直接掛上官方的 CodeDeployPolicy，如圖：
&lt;img src=&quot;http://i.imgur.com/F15UVaN.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;依照教學 Launch Amazon 的 Linux Instance，記得掛上剛剛建立的 EC2 Role。成功 ssh 連進去後安裝 &lt;a href=&quot;http://docs.aws.amazon.com/codedeploy/latest/userguide/how-to-run-agent.html&quot;&gt;code deploy agent&lt;/a&gt;，ubuntu 就選 apt 的那個，Amazon 自家 Linux 就選 yum 的那個，把他裝起來。&lt;/li&gt;
  &lt;li&gt;依照教學，把 WordPress 的 Repo 載下來，建立相應的 init script 還有 &lt;code class=&quot;highlighter-rouge&quot;&gt;appspec.yml&lt;/code&gt;。&lt;/li&gt;
  &lt;li&gt;依照教學，利用 aws cli 建立 application，上傳 s3，這邊依照教學要開一份 IAM 的 User，掛上 s3 put 的權限，下載 User 的 credential (id &amp;amp; secret key)，跑 aws configure 填入設定，這樣才可以在這臺暫時的工作機上傳檔案到 s3。依照教學打包 WordPress 上傳 s3。&lt;/li&gt;
  &lt;li&gt;到 CodeDeploy Console 建立 Deploy 設定。設定 DeployGroup，權限記得掛上之前建立的 CodeDeploy Service Role，其它照著跑。&lt;/li&gt;
  &lt;li&gt;建立部屬行動(Deployment，the 名詞)，看有沒有部屬成功。假如連 Events 都沒顯示，大概是 IAM 權限設定有問題，看一下 EC2 Role 和 CodeDeploy Role 有沒有設定正確&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;大概就這樣啦，這還只是 WordPress 而已，我要部屬的可是 Rails App 欸，之後想必有更細節的其它地方。這樣跑完了一次（還順便被雷了一下午），對 AWS 的理解就更深了，請期待之後的後續文章，哈哈哈（不要說一說就不寫了）&lt;/p&gt;

&lt;p&gt;（完）&lt;/p&gt;

</description>
        <pubDate>Fri, 01 Apr 2016 14:46:00 +0800</pubDate>
        <link>http://yukaii.tw/blog/2016/04/01/15th-use-aws-codedeploy-deploy-wordpress/</link>
        <guid isPermaLink="true">http://yukaii.tw/blog/2016/04/01/15th-use-aws-codedeploy-deploy-wordpress/</guid>
        
        
        <category>aws</category>
        
        <category>codedeploy</category>
        
        <category>wordpress</category>
        
        <category>official</category>
        
        <category>tutorial</category>
        
        <category>workthrough</category>
        
        <category>notes</category>
        
      </item>
    
      <item>
        <title>第十四篇 - 從 Hackpad 搬家到 Quip</title>
        <description>&lt;p&gt;你知道，Hackpad 自從&lt;a href=&quot;https://hackpad.com/Hackpad-is-teaming-up-with-Dropbox-m1Fne5A6Lzn&quot;&gt;被 Dropbox 買走之後&lt;/a&gt;就沒增加新功能了，從 15 年四月&lt;a href=&quot;https://github.com/hackpad/hackpad/issues/1&quot;&gt;收到信說要開源&lt;/a&gt;，也是過了很久的&lt;a href=&quot;http://venturebeat.com/2015/08/21/dropbox-finally-open-sources-its-hackpad-collaborative-document-editor/&quot;&gt;八月&lt;/a&gt;才完成。當然技術公司的整並進去必定要做一堆的交接、磨合、修改成能開源的版本；不過十二月時又有 Dropbox 的&lt;a href=&quot;http://venturebeat.com/2015/08/21/dropbox-finally-open-sources-its-hackpad-collaborative-document-editor/&quot;&gt;前車之鑑&lt;/a&gt;，一路看下來我們還是多做幾個備份好 :p&lt;/p&gt;

&lt;p&gt;Quip 的好就不用多說了，由 Facebook 前 CTO Bret Taylor &lt;a href=&quot;https://en.wikipedia.org/wiki/Quip&quot;&gt;創立&lt;/a&gt;，最近才在 15 年十月拿到 &lt;a href=&quot;https://www.crunchbase.com/organization/quip/funding-rounds&quot;&gt;30M 的 B 輪投資金&lt;/a&gt;，結合 &lt;a href=&quot;https://medium.com/@btaylor/react-with-c-building-the-quip-mac-and-windows-apps-c63155c1531b#.cmtg0ajpc&quot;&gt;React Native C++ Binding&lt;/a&gt; 強大技術力的 Desktop Client，近幾個月來也&lt;a href=&quot;https://quip.com/blog/&quot;&gt;持續在 UI、功能&lt;/a&gt;上優化，前途真是一片光明啊。&lt;/p&gt;

&lt;p&gt;把 Hackpad 轉移到 Quip 確實是個不錯的決定（鋪陳這麼久就為了這句XD），加上 Quip 官方也非常 Nice 的提供此功能：&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;zh-tw&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Some of our users have asked us for a &lt;a href=&quot;https://twitter.com/hackpad&quot;&gt;@Hackpad&lt;/a&gt; import tool, and we wanted to share it with you. Check it out! &lt;a href=&quot;https://t.co/VstwZVEiLb&quot;&gt;https://t.co/VstwZVEiLb&lt;/a&gt;&lt;/p&gt;&amp;mdash; Quip (@quip) &lt;a href=&quot;https://twitter.com/quip/status/475767564383961088&quot;&gt;2014年6月8日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;Well, 早在 14 年吶。雖然 Dropbox Paper（前 Hackpad）也有&lt;a href=&quot;https://paper.dropbox.com/doc/Dropbox-Paper-beta-Is-Ready-For-You-Xlvlkb3yI23hLvuZxvn2Q&quot;&gt;提供導入功能&lt;/a&gt;啦，不過還要寫信到客服信箱，產品變你們家的竟然還沒有無痛一鍵導入是哪招啦 XDD。於是我的 Quip 搬家行動是勢在必行了，以下就略述這個從 hackpad 搬家到 quip 的過程。&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;首先進入網頁版的 quip，點選右上的新增文件，選擇 Import、Hackpad：
&lt;img src=&quot;http://user-image.logdown.io/user/1128/blog/1112/post/682044/fQIA64NTvGEeUis5Kor4_Screen%20Shot%202016-03-26%20at%2012.49.26%20PM.png&quot; alt=&quot;Screen Shot 2016-03-26 at 12.49.26 PM.png&quot; /&gt;
&lt;img src=&quot;http://user-image.logdown.io/user/1128/blog/1112/post/682044/xfyJX8pgRryigqZyf1GL_Screen%20Shot%202016-03-26%20at%2012.49.33%20PM.png&quot; alt=&quot;Screen Shot 2016-03-26 at 12.49.33 PM.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;填入 workspace id，還有依照連結點進去看到的 Client ID 和 API Key：
&lt;img src=&quot;http://user-image.logdown.io/user/1128/blog/1112/post/682044/s6j3UXgnSkOgGrjhHJxS_Screen%20Shot%202016-03-26%20at%2012.49.43%20PM.png&quot; alt=&quot;Screen Shot 2016-03-26 at 12.49.43 PM.png&quot; /&gt;
&lt;img src=&quot;http://user-image.logdown.io/user/1128/blog/1112/post/682044/75bxVjF0Sc6RSyb5JhCh_Screen%20Shot%202016-03-26%20at%2012.50.13%20PM.png&quot; alt=&quot;Screen Shot 2016-03-26 at 12.50.13 PM.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;點開始匯入到單一 Folder 就完成了，但如果你是 workspace 的 admin，你會發現到，&lt;strong&gt;有些在 workspace 不是由你建立的 pads 是不會被匯入的&lt;/strong&gt;，到 Hackpad 的 workspace management 調整 Quip Importer 的權限：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/13MF60X.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://i.imgur.com/hcLssW5.png&quot; alt=&quot;&quot; /&gt;
由 Guest 調整成 Member。&lt;/p&gt;

&lt;p&gt;再等一會兒，就會看到你的 Hackpad 們都匯入到 Quip 資料夾中囉。
&lt;img src=&quot;http://i.imgur.com/NgGR1vi.png&quot; alt=&quot;&quot; /&gt;
（完）&lt;/p&gt;

</description>
        <pubDate>Sat, 26 Mar 2016 04:25:00 +0800</pubDate>
        <link>http://yukaii.tw/blog/2016/03/26/from-hackpad-to-quip/</link>
        <guid isPermaLink="true">http://yukaii.tw/blog/2016/03/26/from-hackpad-to-quip/</guid>
        
        
      </item>
    
      <item>
        <title>第十三篇 - 弄了一個統一發票查詢的 gem</title>
        <description>&lt;p&gt;感覺很久沒發文章了。&lt;/p&gt;

&lt;p&gt;因為正在準備大重構敝司的程式碼，最近這兩天，就把八個多月前寫的一個「統一發票兌獎」的 gem 給重構了一番，順便找一下手感。&lt;/p&gt;

&lt;p&gt;其實無非就是加些 class，修一些 bug，補些測試，還是來這邊記錄一下，畢竟也半年多沒更新了 XD&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Yukaii/uniform-invoice-lottery&quot;&gt;Uniform Invoice Lottery(Github)&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;安裝&lt;/h2&gt;
&lt;p&gt;一如往常在 &lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt; 加上&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;uniform_invoice_lottery&#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;然後跑 bundle&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;使用範例&lt;/h2&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;uniform_invoice_lottery&#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;prize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UniformInvoiceLottery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;check&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;82930261&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;time: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;26&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;prize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UniformInvoiceLottery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;check&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;82930261&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;year: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;month: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;day: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;26&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;amount&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; &quot;10000000&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;title&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; &quot;特別獎&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;大概這樣，資料是從&lt;a href=&quot;http://www.etax.nat.gov.tw/etwmain/front/ETW183W1&quot;&gt;財政部這&lt;/a&gt;抓的。不過我的 css selector 過了八個月又大修了一番，希望別再無效了 :p&lt;/p&gt;
</description>
        <pubDate>Sat, 19 Mar 2016 13:17:00 +0800</pubDate>
        <link>http://yukaii.tw/blog/2016/03/19/taiwan-uniform-invoice-lottery-ruby-gem/</link>
        <guid isPermaLink="true">http://yukaii.tw/blog/2016/03/19/taiwan-uniform-invoice-lottery-ruby-gem/</guid>
        
        
        <category>ruby</category>
        
        <category>gem</category>
        
        <category>欸嘿</category>
        
      </item>
    
      <item>
        <title>第十二篇 - 台科課程匯入小幫手</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://school-agent.herokuapp.com/&quot;&gt;台科課程匯入小幫手&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;屁話&lt;/h2&gt;

&lt;p&gt;這幾天串了 118 的學生資訊系統、 Colorgy 的 API 整合了 Table，做出了無痛匯入課程的小工具，算是開了 Colorgy 第三方 App 的第一槍 =w=（自以為）&lt;/p&gt;

&lt;p&gt;直接從學生資訊系統匯入課程這功能， &lt;a href=&quot;http://ntusweety.herokuapp.com/&quot;&gt;NTU Sweety Course&lt;/a&gt; 和 &lt;a href=&quot;http://nthu-course.cf/&quot;&gt;NTHU Course&lt;/a&gt;、&lt;a href=&quot;http://plus.nctu.edu.tw/&quot;&gt;NCTU+&lt;/a&gt; 都有類似的實作，112/113 的版本似乎直接串學校，就不知道是官方還非官方了XD。當然一提到校園模擬選課就必須拜一下碼頭，&lt;a href=&quot;https://www.crosslink.tw/&quot;&gt;CrossLink&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;找回一個玩樂心態來弄這個小玩意，沒啥特別計劃，時機到累積完就做出來了 Q_Q，感謝捏神支援。&lt;/p&gt;

&lt;p&gt;照慣例把玩具放在 Heroku，說到他們最近政策也滿妙的，之前一直寄信說每天只能開機十八小時，現在過了 8/16 了也都照常使用，41J 也沒碰上過啥問題，還沒付過 heroku 錢欸 XD，It’s the future.&lt;/p&gt;

&lt;p&gt;Gihub: &lt;a href=&quot;https://github.com/Yukaii/SchoolAgent&quot;&gt;https://github.com/Yukaii/SchoolAgent&lt;/a&gt;
&lt;del&gt;Repo 原始英文超中二的 XDDD，不忍直視，請不要去翻 commit 穴穴尼&lt;/del&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;一些介面&lt;/h2&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;img src=&quot;http://user-image.logdown.io/user/1128/blog/1112/post/293646/G8b1uJywRMeCJRa6OVmy_FireShot%20Capture%20-%20%E8%AA%B2%E7%A8%8B%E5%8C%AF%E5%85%A5%E5%B0%8F%E5%B9%AB%E6%89%8B%20-%20http___school-agent.herokuapp.com__logout=true.png&quot; alt=&quot;1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://user-image.logdown.io/user/1128/blog/1112/post/293646/Q2VZBHYmRECUvZEgSpE4_FireShot%20Capture%20-%20%E8%AA%B2%E7%A8%8B%E5%8C%AF%E5%85%A5%E5%B0%8F%E5%B9%AB%E6%89%8B%20-%20http___school-agent.herokuapp.com_import.png&quot; alt=&quot;2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://user-image.logdown.io/user/1128/blog/1112/post/293646/2aQjwQQCQHyEOE2Xmf5Z_FireShot%20Capture%20-%20%E8%AA%B2%E7%A8%8B%E5%8C%AF%E5%85%A5%E5%B0%8F%E5%B9%AB%E6%89%8B%20-%20http___school-agent.herokuapp.com_result.png&quot; alt=&quot;3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;完全的 mobile first，也懶的弄 RWD 了 XD&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;尾刀&lt;/h2&gt;

&lt;p&gt;雖然這邊沒啥人看，不過就只發在這裡了，等待有緣人發現啦w。有一天這功能大概會被默默整合進 Table 裡，呵。&lt;/p&gt;

&lt;p&gt;還有要告解的地方嗎？&lt;/p&gt;
</description>
        <pubDate>Sat, 29 Aug 2015 13:44:00 +0800</pubDate>
        <link>http://yukaii.tw/blog/2015/08/29/12th-ntust-course-helper/</link>
        <guid isPermaLink="true">http://yukaii.tw/blog/2015/08/29/12th-ntust-course-helper/</guid>
        
        
        <category>呵呵好久沒發文了</category>
        
        <category>你說我最近在幹嘛</category>
        
        <category>不告訴你</category>
        
        <category>呵呵</category>
        
        <category>似乎真有點忙</category>
        
      </item>
    
      <item>
        <title>第十一篇 - 第一次自幹爬蟲就上手 - 使用 Ruby</title>
        <description>&lt;h2 id=&quot;section&quot;&gt;目標&lt;/h2&gt;
&lt;p&gt;我們將會解析中正大學選課系統的選課資料，將它轉換成我們想要的格式 (JSON)，把它存起來。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;預先知識&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;已經裝好 ruby 環境了&lt;/li&gt;
  &lt;li&gt;如果是 OSX 記得把 Command Line Tool 裝起來&lt;/li&gt;
&lt;/ul&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;part-a&quot;&gt;PART A:準備檔案&lt;/h2&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mkdir ccu
    &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;ccu
    &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;touch Gemfile crawler.rb
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;建立專案資料夾及檔案，&lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt; 是 &lt;code class=&quot;highlighter-rouge&quot;&gt;Bundler&lt;/code&gt; 用來管理 ruby 套件相依的工具，&lt;a href=&quot;http://bundler.io/&quot;&gt;沒有裝的先來裝個&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;接下來前往&lt;a href=&quot;https://kiki.ccu.edu.tw/~ccmisp06/Course/&quot;&gt;中正大學課程網站&lt;/a&gt;下載該學期的課程資料，網頁下方有一個 &lt;strong&gt;開課資料壓縮檔下載&lt;/strong&gt; 的區塊，下載並解壓縮，放到我們的專案目錄底下。&lt;/p&gt;

&lt;p&gt;現在資料夾下檔案應該如下圖
&lt;img src=&quot;http://user-image.logdown.io/user/1128/blog/1112/post/243459/dbdLytaARcKx03aTMwJR_step1.png&quot; alt=&quot;step1.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;part-b&quot;&gt;PART B:設置套件&lt;/h2&gt;
&lt;p&gt;編輯 Gemfile 檔，設置這次中正課程爬蟲所需要的套件。加入以下兩行：&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;https://rubygems.org&#39;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;nokogiri&#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;pry&#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;其中 &lt;code class=&quot;highlighter-rouge&quot;&gt;nokogiri&lt;/code&gt; 是超常用，用來解析 HTML/XML 標簽語言結構的套件。
它可以將你的 HTML 檔解析成 Nokogiri 的物件，方便查詢、篩選。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://pryrepl.org/&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pry&lt;/code&gt;&lt;/a&gt; 你可以先把它想像成一個加強的 irb，附加上 syntax highlighting, plugin architecture, runtime invocation 等等強大的功能。我一般都用來 debug。&lt;/p&gt;

&lt;p&gt;寫完之後跑 bundle，安裝完這兩個套件&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;裝完長這樣
&lt;img src=&quot;http://user-image.logdown.io/user/1128/blog/1112/post/243459/hCNL1HqMSyGU5VFhGHNc_gemfile.png&quot; alt=&quot;gemfile.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;part-c&quot;&gt;PART C:玩一下&lt;/h2&gt;
&lt;p&gt;先觀察一下課程網頁的結構&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://user-image.logdown.io/user/1128/blog/1112/post/243459/RtVfu4fbTZq6hrl7nEUV_table.png&quot; alt=&quot;table.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;每個課程網頁裡面都有一張表格，表格每一列有我們需要的課程資料，我們要做的就是把每一格的資料從網頁中抓出來。&lt;/p&gt;

&lt;p&gt;打開 Chrome 開發人員工具，對表格中的其中一格選擇檢查元素，可以看到下面的結構&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://user-image.logdown.io/user/1128/blog/1112/post/243459/J49HGBWgTKecrv9Fcz6R_structure.png&quot; alt=&quot;structure.png&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;table&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;tbody&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;....&lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
      ...
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/tbody&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;td&amp;gt;&lt;/code&gt;標記中存的就是我們要的資料。它的結構是 table 包 tbody 包 tr 包 td。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;稍微的來跟 pry 玩一下。&lt;/p&gt;

&lt;p&gt;打開 Terminal 確定我們在專案目錄下，啟動 pry 進度 interactive console 模式：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://user-image.logdown.io/user/1128/blog/1112/post/243459/uK7BV41mTQGR5lNaf3kn_step2.png&quot; alt=&quot;step2.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;將任意一個課程網頁檔讀進來&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;1031/1014.html&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;http://user-image.logdown.io/user/1128/blog/1112/post/243459/QSrjA3FsQuC389J9WPpi_step3.png&quot; alt=&quot;step3.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;我在行末加上一個分號，這是讓 pry 不會預覽回傳值。當沒加的時候，就會預覽回傳值，也就是讀進來的 html&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://user-image.logdown.io/user/1128/blog/1112/post/243459/Db5ei9I9TUugtynGB4PP_step3-1.png&quot; alt=&quot;step3-1.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在此界面下，j/k 上下捲動，d/u 捲動半頁，q 離開回到 console。&lt;/p&gt;

&lt;p&gt;再來載入 &lt;code class=&quot;highlighter-rouge&quot;&gt;nokogiri&lt;/code&gt;，將剛剛讀取進來的 html 資料字串轉為 Nokogiri 物件，我們將物件存為 doc 變數：&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;nokogiri&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Nokogiri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;HTML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;http://user-image.logdown.io/user/1128/blog/1112/post/243459/yRsJw8cxT7WOdnOnfqdx_nokogiri.png&quot; alt=&quot;nokogiri.png&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;在此我們就進入爬蟲的精華了！(自己說)&lt;/p&gt;

&lt;p&gt;接下來我們將使用 CSS selector(選擇器) 語法，幫助我們從落落長的 html 文件中拿取我們要的資訊。&lt;/p&gt;

&lt;p&gt;css selector 基本的規則分成幾個：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;HTML tag selector&lt;/li&gt;
  &lt;li&gt;id selector&lt;/li&gt;
  &lt;li&gt;class selector&lt;/li&gt;
  &lt;li&gt;attribute selector&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;html 長這樣&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;table&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hi&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;table1&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;500&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/table&amp;gt;&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;也就是&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;tag&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;class-value&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;id-value&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;attribute=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;attribute-value&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/tag&amp;gt;&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;在使用 css selector 就會用&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;table.hi#table1[width=&quot;500&quot;]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;來選擇，選擇也可以是多層的，例如 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;table&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/table&amp;gt;&lt;/code&gt;就用&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;table tr td
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;更多詳細精確的用法，請自行 Google。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;繼續剛才的進度，我們把 Nokogiri 的物件存成了 doc，我們可以開始用這個物件下 css selector，例如&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;table&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;table tr&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;table tr td&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;可以分別試試看結果。&lt;/p&gt;

&lt;p&gt;Nokogiri 在 select 時也可以是嵌套的，請記住，&lt;code class=&quot;highlighter-rouge&quot;&gt;.css(&#39;&#39;)&lt;/code&gt;方法回傳是一個 nokogiri 物件的陣列，所以我們可以這樣用&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;table&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;tr&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;td&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;代表第一個 &lt;code class=&quot;highlighter-rouge&quot;&gt;table&lt;/code&gt; 中的第一個 &lt;code class=&quot;highlighter-rouge&quot;&gt;tr&lt;/code&gt;(table row)中的第一個 &lt;code class=&quot;highlighter-rouge&quot;&gt;td&lt;/code&gt;(table data)&lt;/p&gt;

&lt;h2 id=&quot;part-d&quot;&gt;PART D:動工&lt;/h2&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;nokogiri&#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;pry&#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;json&#39;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;courses&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;glob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;1031/*.html&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Nokogiri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;HTML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:invalid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:undef&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;table tr:not(:first-child)&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;datas&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;td&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;courses&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;grade: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;serial: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;class_type: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;name: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;lecturer: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;credits: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;required_or_elective: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;time_location: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;type: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;outline: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:href&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;note: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;text&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;courses.json&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;w&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pretty_generate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;courses&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;這是最終完成的&lt;a href=&quot;https://github.com/colorgy/crawler-CCU-course&quot;&gt;結果&lt;/a&gt;，實際上和我們剛才在 pry 裏試玩時差不了多少，一些函式如果不理解都可以 Google，有幾點注意。&lt;/p&gt;

&lt;h4 id=&quot;encode&quot;&gt;encode&lt;/h4&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:invalid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:undef&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;在這段我將檔案讀出的編碼去掉不合法和未定義的部分，否則在輸出成 JSON 時會出錯。&lt;/p&gt;

&lt;h4 id=&quot;section-2&quot;&gt;賦值&lt;/h4&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;datas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;text&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;先確定 data[2] 非 nil，再取用方法，比用 if 判斷 &lt;code class=&quot;highlighter-rouge&quot;&gt;data[2].nil?&lt;/code&gt; 簡潔&lt;/p&gt;

&lt;h2 id=&quot;debug&quot;&gt;Debug&lt;/h2&gt;

&lt;p&gt;在你想要的斷點加入&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;binding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pry&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;一般來說我會在插入的該行下方再多加入一行無意義的輸出，例如：&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;binding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pry&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;asdf&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;因為假如 binding.pry 的下一行是 end 或是方法結束，斷點會直接跳回上一層，很不方便。&lt;/p&gt;

&lt;p&gt;在斷點的地方你可以直接取用你所在區域的變數，以及可以用的方法，如此你可以邊寫邊確認你的程式碼是正確、或是你想要的，就不用在每次 print 出來啦！&lt;/p&gt;
</description>
        <pubDate>Sun, 03 May 2015 11:04:00 +0800</pubDate>
        <link>http://yukaii.tw/blog/2015/05/03/how-to-write-web-crawler-for-the-first-time-using-ruby/</link>
        <guid isPermaLink="true">http://yukaii.tw/blog/2015/05/03/how-to-write-web-crawler-for-the-first-time-using-ruby/</guid>
        
        
      </item>
    
      <item>
        <title>第十篇 - 綜合外電施旖婕(41J)</title>
        <description>&lt;p&gt;以下轉自我的 &lt;a href=&quot;https://github.com/Yukaii/Apple-Watch&quot;&gt;Github&lt;/a&gt;。&lt;/p&gt;

&lt;h1 id=&quot;apple-watch&quot;&gt;蘋果日報即時新聞監看，簡稱 Apple Watch&lt;/h1&gt;

&lt;h2 id=&quot;section&quot;&gt;這是幹嘛的？&lt;/h2&gt;
&lt;p&gt;不知大家有沒有聽過「施旖婕」這響叮噹的名號，總之就是蘋果日報專發腥羶色新聞的專用作者名，&lt;del&gt;不管了就是我老婆&lt;/del&gt;。詳細可以 follow &lt;a href=&quot;https://www.ptt.cc/bbs/Gossiping/M.1429255977.A.672.html&quot;&gt;八卦版系列文&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;於是就寫了一份可以監看&lt;a href=&quot;http://appledaily.com.tw/realtimenews/section/new/&quot;&gt;蘋果日報即時新聞&lt;/a&gt;的 Rails 服務，目前在上面可以看到每天蘋果日報上，記者施旖婕所 PO 的綜合外電，感受世界各地滿滿的惡意(X)。&lt;/p&gt;

&lt;p&gt;目前部署在 heroku，因為是，定時用 &lt;a href=&quot;posts/261901/eighth-get-free-heroku-app-does-not-automatically-shut-down&quot;&gt;UptimeRobot&lt;/a&gt; 戳一下讓它自動跑 task 即可。&lt;/p&gt;

&lt;h2 id=&quot;todos&quot;&gt;Todos&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;前端&lt;/li&gt;
  &lt;li&gt;統計圖表(等資料量至少累積一個月吧 XD)&lt;/li&gt;
  &lt;li&gt;Administration(爽度問題)&lt;/li&gt;
  &lt;li&gt;串 Facebook Message API，讓你隨時感受 1J 的愛&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;自動 PO &lt;a href=&quot;https://www.facebook.com/ShiYiJieJournalist&quot;&gt;粉絲專頁-綜合外電施旖婕&lt;/a&gt;&lt;/del&gt; 已完成&lt;/li&gt;
  &lt;li&gt;熱門度(自動更新蘋果上面的熱門度，加上自己站上的)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;等等，好像還挺多的。&lt;/p&gt;

&lt;p&gt;好玩嘛&lt;/p&gt;
</description>
        <pubDate>Sun, 26 Apr 2015 15:49:00 +0800</pubDate>
        <link>http://yukaii.tw/blog/2015/04/26/tenth-chapter-new-york-shi-yijie/</link>
        <guid isPermaLink="true">http://yukaii.tw/blog/2015/04/26/tenth-chapter-new-york-shi-yijie/</guid>
        
        
        <category>just</category>
        
        <category>for</category>
        
        <category>fun</category>
        
        <category>哈哈</category>
        
        <category>沒有反串</category>
        
        <category>真實經營</category>
        
        <category>小編胖胖</category>
        
        <category>不要問我</category>
        
        <category>到底是誰</category>
        
        <category>我會被打</category>
        
        <category>哈哈哈哈</category>
        
      </item>
    
      <item>
        <title>第九篇 - 使用 iTunes Match</title>
        <description>&lt;p&gt;曾經有一陣子很熱衷「試聽」音樂，iTunes Library 不知不覺就長到了 90GB。iTunes 實在方便，乾淨的專輯封面總攬，這樣選歌差不多也就夠了。但自從換了有 SSD 的電腦，90GB 的音樂對於硬碟空間也是太奢侈了。&lt;/p&gt;

&lt;h4 id=&quot;section&quot;&gt;以前的玩法&lt;/h4&gt;
&lt;p&gt;複製到 Nas 中，區網掛載。&lt;/p&gt;

&lt;p&gt;方便性還可以接受，畢竟 Library 都還看到自己的所有歌，只是受限于區網設備，有時候硬碟掛載失敗，或是花很久時間載入，在外網或是手機端也無法使用。&lt;/p&gt;

&lt;h4 id=&quot;itunes-match&quot;&gt;iTunes Match&lt;/h4&gt;
&lt;p&gt;年費 NT$ 690，以現有的音樂資料庫（不管你是不是試聽版來著）去核對 iTunes 的資料庫，如果他們商店有就記錄起來，如果找不到，就將歌曲上傳至 iCloud，每一個登入 iTunes 帳號的裝置，手機平板或其他台電腦都可以即時串流，也可以透過 iCloud 下載至裝置，好處自然不計多說，Android 暫時無解，限制最多只能存放 25000 首歌。偷偷說，&lt;del&gt;一年不小心試聽三張專輯就回本啦……&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;算算我也放了一半多了(一萬兩千多首)，之後的增加速度就會小很多了吧，哈哈。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://user-image.logdown.io/user/1128/blog/1112/post/261902/yuXUj7uTSO8j8n1V7DCF_%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202015-04-26%20%E4%B8%8B%E5%8D%8811.48.02.png&quot; alt=&quot;螢幕快照 2015-04-26 下午11.48.02.png&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 26 Apr 2015 15:46:00 +0800</pubDate>
        <link>http://yukaii.tw/blog/2015/04/26/nineth-using-itunes-match/</link>
        <guid isPermaLink="true">http://yukaii.tw/blog/2015/04/26/nineth-using-itunes-match/</guid>
        
        
      </item>
    
      <item>
        <title>第八篇 - 讓免費 Heroku App 不會自動關機</title>
        <description>&lt;p&gt;免費的 Heroku 開的 App 只要過半小時，就會自動關機。雖然啟動很快，不過體驗就差了。&lt;/p&gt;

&lt;p&gt;一般的做法是安裝 &lt;a href=&quot;https://newrelic.com&quot;&gt;newrelic&lt;/a&gt; 監控，每隔一段時間交流一下，就可維持開機狀態。不過本 ghost 部落格一直設定不起來 newrelic 的 node 套件，只好找了個替代品 &lt;a href=&quot;https://uptimerobot.com&quot;&gt;UptimeRobot&lt;/a&gt; 來使用。免費的方案可以 monitor 五十個站台，最短 interval 為五分鐘，夠用了。&lt;/p&gt;

&lt;p&gt;表現倒是不錯，設定每十五分鐘左右自動 ping 個，就和一般網站一樣啦，皆大歡喜 XD。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://user-image.logdown.io/user/1128/blog/1112/post/261901/XxmpYw7CQkESsvFqbM9n_%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202015-04-23%20%E4%B8%8A%E5%8D%881.46.37.png&quot; alt=&quot;螢幕快照 2015-04-23 上午1.46.37.png&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 26 Apr 2015 15:44:00 +0800</pubDate>
        <link>http://yukaii.tw/blog/2015/04/26/eighth-get-free-heroku-app-does-not-automatically-shut-down/</link>
        <guid isPermaLink="true">http://yukaii.tw/blog/2015/04/26/eighth-get-free-heroku-app-does-not-automatically-shut-down/</guid>
        
        
      </item>
    
  </channel>
</rss>
